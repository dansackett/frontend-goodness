{"name":"Frontend-goodness","tagline":"A streamlined frontend development system using Gulp, SASS, CoffeeScript, AngularJS, and Twitter Bootstrap","body":"Frontend Goodness\r\n=================\r\n\r\nThis is a great way to work with newer frontend technologies while allowing\r\nyou to add any backend you want alongside it. It uses [Gulp](http://gulpjs.com/)\r\nto watch and build CoffeeScript and SASS for you as you work with AngularJS.\r\n\r\nWho Is This Template For\r\n========================\r\n\r\nIdeally this is a great starting point for someone who wants to build an\r\napplication using AngularJS written in CoffeeScript. As well,\r\nit enables you to write SASS for your CSS which makes CSS development much\r\nfaster.\r\n\r\nFeatures\r\n========\r\n\r\n* [AngularJS](https://angularjs.org/) - Because it's the future of data-driven\r\n  front-end frameworks.\r\n* [UI-Bootstrap](http://angular-ui.github.io/bootstrap/) - Because it\r\n  replaces jQuery for Bootstrap.\r\n* [UI-Router](https://github.com/angular-ui/ui-router) - Because it is the\r\n  community standard for routing AngularJS apps.\r\n* [CoffeeScript](http://coffeescript.org/) - Because it makes writing all\r\n  things JavaScript easier.\r\n* [Twitter Bootstrap](http://getbootstrap.com) - For quick scaffolding.\r\n* [SASS](http://sass-lang.com/) - Making writing CSS less painful.\r\n* [Gulp](http://gulpjs.com/) - Tool to build all files and compile for production.\r\n* [FontAwesome](http://fontawesome.io/) - Excellent web fonts.\r\n\r\nGetting Setup\r\n=============\r\n\r\nClone this repo where you want your project to live:\r\n\r\n    git clone git@github.com:dansackett/frontend-goodness\r\n\r\nNext make sure you install nodeJS:\r\n\r\n    sudo apt-get install -y python-software-properties\r\n    sudo add-apt-repository ppa:chris-lea/node.js\r\n    sudo apt-get update\r\n    sudo apt-get install nodejs\r\n\r\nNext install bower (It's recommended to install it globally):\r\n\r\n    sudo npm install -g bower gulp\r\n\r\nNext install the NPM packages we'll use for this repo:\r\n\r\n    sudo npm install\r\n\r\nNext install bower components:\r\n\r\n    bower install\r\n\r\nFinally, type:\r\n\r\n    gulp\r\n\r\nIf all was installed correctly, you will have a fully functional website setup\r\nwherever your local server instance is located.\r\n\r\nUsing this project\r\n==================\r\n\r\nTo work with this project, make sure you follow the steps above to set things\r\nup properly. Once setup, all you will need to do is open a terminal and run:\r\n\r\n    gulp\r\n\r\nThe default task for Gulp is a watch command which monitors changes to all\r\nfiles in the `src/coffee` and `src/css` directories. This is the primary way\r\nof working with the project.\r\n\r\nAngularJS Modules\r\n=================\r\n\r\nAll AngularJS is modular in the sense that it uses module files to handle\r\nlinking and compiling. You can see this in the `src/coffee/layout` folder. In\r\norder to add new modules, use this case as your base. For instance, a module\r\nfile like so could be:\r\n\r\n**src/coffee/example/example.module.coffee**:\r\n\r\n    (() ->\r\n        angular.module 'app.example', [\r\n          'app.example.controllers',\r\n          'app.example.services',\r\n        ]\r\n\r\n        angular.module 'app.example.controllers', []\r\n        angular.module 'app.example.services', []\r\n    )()\r\n\r\nThis module file will then expect you create the following directories:\r\n\r\n* `src/coffee/example/controllers/`\r\n* `src/coffee/example/services/`\r\n\r\nWithin these directories, we can build our modules like so:\r\n\r\n**src/coffee/example/controllers/example.controller.coffee**:\r\n\r\n    (() ->\r\n        ExampleController = () ->\r\n            'ngInject'\r\n            vm = this\r\n\r\n            activate = () ->\r\n                return\r\n\r\n            activate()\r\n            return\r\n\r\n        angular\r\n        .module 'app.example.controllers'\r\n        .controller 'ExampleController', ExampleController\r\n    )()\r\n\r\nAs you can see, this pattern is then reproduced to build perfect module\r\ncomponents which when concatenated together for the distribution version will\r\nwork together.\r\n\r\n**Always remember to edit the `src/coffee/app.coffee` file and add your new\r\nmodules if the changes don't seem to take effect.**\r\n\r\nRouter Templates\r\n================\r\n\r\nWhen adding new routes to your app, you should add templates to the\r\n`public/templates` directory. These will be directly served and is a good\r\nplace to organize all partials and the like.\r\n\r\nConfiguring Gulp Endpoints\r\n==========================\r\n\r\nTo customize the source and destination folders, open the `gulp_config.yaml`\r\nfile and edit the items. There is a place for **third-party** scripts as well\r\nthat has been prepopulated with packages included in this project. Gulp will\r\nfind all of your packages listed here and concatenate them and minify them\r\ninto a single file `dependencies.min.js` and `dependencies.min.css`\r\nrespectively.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}